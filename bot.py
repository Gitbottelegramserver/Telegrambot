from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, LabeledPrice, PreCheckoutQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.callback_answer import CallbackAnswerMiddleware
from aiogram.utils.markdown import hbold
from aiogram import Router
import asyncio
import config
import logging

bot = Bot(token=config.API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    builder = ReplyKeyboardBuilder()
    builder.button(text="üìö –ö—É—Ä—Å—ã")
    builder.button(text="üí∞ –û–ø–ª–∞—Ç–∞")
    builder.button(text="üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ALGO HUB!", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message(F.text == "üìö –ö—É—Ä—Å—ã")
async def handle_courses(message: Message):
    await message.answer("""–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π:
1. –í–≤–µ–¥–µ–Ω–∏–µ
2. DeFi
3. NFT
4. –¢–æ—Ä–≥–æ–≤–ª—è
5. –ê–Ω–∞–ª–∏—Ç–∏–∫–∞""")




@dp.message(F.text == "üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def handle_support(message: Message):
    await message.answer("–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å: @support_username")

@dp.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def handle_profile(message: Message):
    await message.answer(f"–í–∞—à ID: {message.from_user.id}\n–í–∞—à–µ –∏–º—è: {hbold(message.from_user.full_name)}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã
@dp.message(F.text == "üí∞ –û–ø–ª–∞—Ç–∞")
async def handle_payment(message: Message):
    prices = [LabeledPrice(label="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ALGO HUB", amount=50000)]  # 500.00 RUB
    await bot.send_invoice(
        chat_id=message.chat.id,
        title="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ALGO HUB",
        description="–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∑–∞–∫—Ä—ã—Ç—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º",
        payload="subscription_payload",
        provider_token=config.PAYMENT_PROVIDER_TOKEN,
        currency="RUB",
        prices=prices,
        start_parameter="test-invoice"
    )

@dp.pre_checkout_query()
async def process_pre_checkout_query(pre_checkout_q: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_q.id, ok=True)

@dp.message(F.content_type == types.ContentType.SUCCESSFUL_PAYMENT)
async def process_successful_payment(message: Message):
    await message.answer("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —Ä–∞–∑–¥–µ–ª.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
